[build-system]
requires = ["setuptools>42", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

# the tool that generates a file with package version based on the latest tag
# this file is **NOT** part of the git repository, as it changes with every commit
[tool.setuptools_scm]
write_to = "src/map_with_stats/_version.py"
version_scheme = "post-release"
local_scheme = "no-local-version"

[project]
name = "map_with_stats"
dynamic = ["version"]
authors = [{name="Mischa Lisovyi"}]
description = "Interactive map with a choropleth displaying some statistics as color per hectare"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
dependencies = ["folium>=0.10,<1.0", "geopandas>=0.10,<1.0"]

[project.urls]
"Homepage" = "https://github.com/mlisovyi/map_with_stats"
"Documentation" = "https://mlisovyi.github.io/map_with_stats/"

[tool.setuptools.dynamic]
version = {attr = "map_with_stats._version.__version__"}

[tool.setuptools.packages.find]
where = ["src"]  # ["."] by default
include = ["map_with_stats*"]
namespaces = false  # true by default

[tool.setuptools.package-data]
map_with_stats = ["py.typed"]

[tool.pytest.ini_options]
norecursedirs = '.*'
# add --cov-report=html to generate an html report
# in the html page one can well see which code is (not) covered
# coverege report will be added to pytest run
addopts = "--cov=src/map_with_stats --cov-report=term --cov-config=pyproject.toml --no-cov-on-fail"
# pytest issues PytestDeprecationWarning about hooks in pytest_cov, so we filter those out
filterwarnings = ["ignore::FutureWarning", "ignore::pytest.PytestDeprecationWarning"]
testpaths=["tests"]

[tool.coverage.run]
# skip module and any further custom files
omit =["*/__init__.py", "_version.py"]

[tool.mypy]
# What files should be included.
files =["src"]
# We want to be as strict as possible but allow reexports
strict = true
implicit_reexport = true

[[tool.mypy.overrides]]
module = [
    "pandas",
    "shapely",
    "folium",
    "geopandas",
    "shapely.ops"
]
ignore_missing_imports = true